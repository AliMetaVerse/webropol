{
  "projectContext": {
    "framework": "html",
    "icons": "FontAwesome Pro Icons",
    "styling": "TailwindCSS"
  },
  "rules": [
    {
      "id": "use-tailwind",
      "description": "All styling should be done with TailwindCSS classes only.",
      "example": "<div className=\"flex items-center justify-center p-4 bg-gray-100\">...</div>"
    },
    {
      "id": "no-demo-test-data-files",
      "description": "No demo or test needed by default.",
      "example": "test.js, demo-data.json, demo.html"
    },
    {
      "id": "no-emoji",
      "description": "Never use emojis in UI, text, or design output. Use proper icons from `react-icons` instead."
    },
    {
      "id": "use-fontawesome",
      "description": "Use FontAwesome Pro Icons for all icons in the project.",
      "example": "<FontAwesomeIcon icon={['fas', 'check']} />"
    },
    {
      "id": "no-inline-styles",
      "description": "Avoid using inline styles in JSX. Use TailwindCSS classes instead."
    },
    {
      "id": "semantics",
      "description": "Semantic color tokens mapped to Webropol design tokens (see design-system/styles/tokens.js). Use these across components; Tailwind classes should reference the mapped variables.",
      "example": "<div class=\"bg-primary-500 text-white hover:bg-primary-600\">...</div>",
      "semantic": {
        "brand-primary": "{colors.primary.700}",
        "brand-primary-hover": "{colors.primary.800}",
        "brand-accent": "{colors.accent.600}",

        "button-primary": "{colors.primary.700}",
        "button-primary-hover": "{colors.primary.800}",
        "button-secondary": "{colors.neutral.0}",
        "button-secondary-hover": "{colors.primary.300}",
        "button-ghost-hover": "{colors.neutral.50}",

        "status-success": "{colors.success.500}",
        "status-warning": "{colors.warning.500}",
        "status-error": "{colors.error.500}",

        "background-default": "{colors.neutral.50}",
        "background-elevated": "{colors.neutral.0}",
        "surface": "{colors.neutral.0}",

        "text-primary": "{colors.neutral.900}",
        "text-secondary": "{colors.neutral.700}",
        "text-inverse": "{colors.neutral.0}",

        "border-default": "{colors.neutral.200}",
        "focus-ring": "{colors.primary.500}"
      }
    },
    {
      "id": "preserve-localstorage",
      "description": "Data stored in localStorage should remain unchanged, and any updates should be applied without disrupting or affecting the existing localStorage functionality.",
      "action": "preserve"
    }
  ]
}
